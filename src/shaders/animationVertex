#version 400 core

const int MAX_JOINTS = 50;//Maks antall joints i en modell
const int MAX_WEIGHTS = 3;//Maks antall joints som bestemmer vertexen


in vec3 position;
in vec2 textureCoords;
in vec3 normal;
in ivec3 jointIndicies;
in vec3 weights;

out vec2 pass_textureCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;

uniform mat4 jointTransforms[MAX_JOINTS];


uniform mat4 transformationMatrix;

uniform mat4 projectionMatrix;

uniform mat4 viewMatrix;

uniform vec3 lightPosition;

void main(void){
	vec4 totalLocalPosition = vec4(0.0);
	vec4 totalNormal = vec4(0.0);
	for(int i=0;i<MAX_WEIGHTS;i++){
		mat4 jointTransform = jointTransforms[jointIndicies[i]];
		vec4 posePosition = jointTransform * vec4(position,1.0);
		totalLocalPosition += posePosition * weights[i];

		vec4 worldNormal = jointTransform * vec4(normal,0.0);
		totalNormal += worldNormal * weights[i];
	}

	
	vec4 worldPosition = transformationMatrix * vec4(position,1.0);
	gl_Position = projectionMatrix * viewMatrix * totalLocalPosition; 
	pass_textureCoords = textureCoords;
	
	surfaceNormal = (transformationMatrix * vec4(normal,0.0)).xyz * totalLocalPosition.xyz;
	toLightVector = lightPosition - worldPosition.xyz;
	
	// Spectular lys (skinn)
	toCameraVector = (inverse(viewMatrix) * vec4(0.0,0.0,0.0,1.0)).xyz - worldPosition.xyz;
}
